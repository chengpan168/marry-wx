<style lang="less">
  @import "../../assets/css/global";

  page {
  }

  .page {
  }

  .form {

    .picker {
      display: flex;
      align-items: center;
      justify-content: flex-end;
      .icon-close {
        background: rgba(163, 177, 204, 1);
        border-radius: 50%;
        padding: 6px;
        color: #ffffff;
        margin-left: 8px;
      }
    }

    .remark {
      display: block;
      text-align: left;

      .form-item-content {
        display: block;

        textarea {
          margin-top: 24px;
          display: block;
          width: 100%;
          height: 100px;
        }
      }

    }
  }

  .submit {
    margin: 80px 40px;
    border: none;
    outline: none;
    height: 100px;
    line-height: 100px;
    background: linear-gradient(315deg, rgba(137, 217, 98, 1) 0%, rgba(67, 191, 171, 1) 100%);
    border-radius: 10px;
    font-size: 36px;
    font-weight: 800;
    color: rgba(255, 255, 255, 1);
  }
</style>
<template>
  <view class="page">
    <view class="form">
      <view class="form-item">
        <label class="form-item-label">借出额度</label>
        <view class="form-item-content">
          <input bindinput="onSendAmountChange" type="number" value="{{ formData.sendAmount }}" placeholder="人民币"
                 placeholder-class="placeholder"/>
        </view>
      </view>
      <view class="form-item">
        <label class="form-item-label">借出时间</label>
        <view class="form-item-content">
          <picker mode="date" value="{{formData.sendAmountTime}}" bindchange="bindSendTimeChange">
            <view class="picker">
              {{formData.sendAmountTime ? formData.sendAmountTime : '默认今天'}}
            </view>
          </picker>
        </view>
      </view>
      <view class="form-item">
        <label class="form-item-label">还款期限</label>
        <view class="form-item-content">
          <picker mode="date" start="{{formData.sendAmountTime}}" value="{{formData.receiveAmountTime}}"
                  bindchange="bindReceiveTimeChange">
            <view class="picker">
              <text>{{formData.receiveAmountTime ? formData.receiveAmountTime : '请选择还款期限(选填)'}}</text>
              <text @tap.stop="onClearReceiveTime" wx:if="{{formData.receiveAmountTime}}" class="iconfont icon-close"></text>
            </view>
          </picker>
        </view>
      </view>
      <view class="form-item">
        <label class="form-item-label">借给谁</label>
        <view class="form-item-content">
          <input bindinput="onReceiveNameChange" value="{{ formData.receiveName }}" placeholder="输入对方姓名"
                 placeholder-class="placeholder"/>
        </view>
      </view>
      <view class="form-item remark">
        <label class="form-item-label">备注</label>
        <view class="form-item-content">
          <textarea bindinput="onRemarkChange" value="{{ formData.remark }}" placeholder="可备注利息约定等信息"
                    placeholder-class="placeholder" maxlength="1000"></textarea>
        </view>
      </view>
    </view>


    <button class="submit" @tap="onSubmit" hover-class="none">确定</button>

    <!--分隔线-->
    <i-toast id="toast"/>
  </view>
</template>

<script>
  import page from '@/common/page'
  import schema from 'async-validator'
  import format from 'date-fns/format'

  const { $Toast } = require('@/components/iview/base/index')

  export default class LoadEdit extends page {
    config = {
      'navigationBarTitleText': '借单管家',
      'enablePullDownRefresh': false,
      'navigationBarBackgroundColor': '#FFFFFF',
      'usingComponents': {
        'i-toast': '/components/iview/toast/index'
      }
    }
    components = {}

    data = {
      token: '',
      formData: {
        id: '',
        type: 'send',
        sendAmount: '',
        receiveName: '',
        sendAmountTime: '',
        receiveAmountTime: '',
        remark: ''
      },
      formValidator: {
        sendAmount: [
          { type: 'number', required: true, message: '请填写借出额度', trigger: 'blur' }
        ],
        /* receiveAmountTime: [
           { required: true, message: '请填写还款期限', trigger: 'blur' }
         ],*/
        receiveName: [
          { required: true, message: '请填写对方姓名', trigger: 'blur' }
        ]
      }

    }

    computed = {}

    onLoad (opt) {
      this.formData.id = opt.id || ''
    }

    onShow () {
      this.init()
    }

    onReachBottom (e) {
      if (!this.data.hasNext || this.data.loading) {
        return
      }
    }

    onShareAppMessage (e) {
      let opt = {
        title: this.shareTitles[parseInt(Math.random() * 10 / 3)],
        imageUrl: 'http://load-wx.oss-cn-hangzhou.aliyuncs.com/assets/image/share_image.png',
        path: '/pages/index',
        success (res) {
          console.log('分享成功', res)
        }
      }
      return opt
    }

    init () {
      this.getDetail()

    }

    methods = {
      onSubmit () {
        const validator = new schema(this.formValidator)
        validator.validate(this.formData, (errors, fields) => {
          if (errors) {
            $Toast({
              content: errors[0].message
            })
          } else {
            this.$post('/dr/save', this.formData).then(res => {
              $Toast({
                content: '添加成功',
                duration: 0
              })
              setTimeout(() => {
                $Toast.hide()
                wx.reLaunch({
                  url: '/pages/load/success?id=' + res
                })
              }, 1000)
            })
          }

        })
      },
      onSendAmountChange ({ detail }) {
        this.formData.sendAmount = parseInt(detail.value)
      },
      bindSendTimeChange ({ detail }) {
        this.formData.sendAmountTime = detail.value
      },
      bindReceiveTimeChange ({ detail }) {
        this.formData.receiveAmountTime = detail.value
      },
      onReceiveNameChange ({ detail }) {
        this.formData.receiveName = detail.value
      },
      onRemarkChange ({ detail }) {
        this.formData.remark = detail.value
      },
      onClearReceiveTime () {
        this.formData.receiveAmountTime = ''
      }
    }

    getDetail () {
      if (!this.formData.id) {
        return
      }
      wx.showNavigationBarLoading()

      this.$get('/dr/queryById', { id: this.formData.id }).then(res => {

        let formData = res

        formData.type = 'send'
        if (formData.sendAmountTime) {
          formData.sendAmountTime = format(formData.sendAmountTime, 'YYYY-MM-DD')
        }
        if (formData.receiveAmountTime) {
          formData.receiveAmountTime = format(formData.receiveAmountTime, 'YYYY-MM-DD')
        }

        this.formData = formData
        wx.hideNavigationBarLoading()
        this.$apply()
      })

    }

  }
</script>
