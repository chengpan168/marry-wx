<style lang="less">
  @import "../../assets/css/global";

  page {
  }

  .page {
  }


  .menu-group {
    background: #ffffff;
    padding: 0 24px;
    margin-top: 10px;


    .menu-item {
      display: flex;
      align-items: center;
      height: 100px;
      padding: 0;
      border-top: 1px solid #E6E6E6;

      &:first-child {
        border: 0;
      }

      .iconfont {
        font-size: 42px;
        color: #FCD601;
        margin-right: 14px;
      }

      .name {
        flex-grow: 1;
        font-size: 30px;
        color: rgba(0, 0, 0, 1);
      }

      .picker {
        font-size: 24px;
        font-weight: bold;
        color: rgba(84, 84, 84, 1);
        min-width: 200px;
        height:100px;
        line-height:100px;
        text-align:right;
      }

      .enter {
        display: flex;
        align-items: center;
        justify-content: flex-end;
        font-size: 24px;
        font-weight: bold;
        color: rgba(84, 84, 84, 1);

        text {
          display: inline-block;
          max-width: 500px;
          overflow: hidden;
          text-overflow:ellipsis;
          white-space: nowrap;
        }

        .value {
          font-size: 24px;
          font-weight: bold;
          color: rgba(84, 84, 84, 1);
        }

        .icon-enter {
          color: #545454;
          font-size: 20px;
        }

        .count-down {
          font-size: 48px;
          font-weight: bold;
          color: #FCD601;
        }

        .badge {
          display: flex;
          align-items: center;
          justify-content: center;
          height: 40px;
          padding: 0 12px;
          background: rgba(212, 48, 48, 1);
          border-radius: 50%;
          font-size: 24px;
          color: rgba(255, 255, 255, 1);
          margin-right: 18px;
        }
      }
    }

    .avatar-wrapper {
      height: 120px;


      .avatar {
        width: 84px;
        height: 84px;
        border-radius: 50%;
      }
    }

    .menu-item-sub {
      display: flex;
      justify-content: flex-start;
      padding: 20px 0px 20px 50px;
      text-align: left;
      border-top: 1px solid #E6E6E6;

      & > .item {
        text-align: center;

        .iconfont {
          color: #000000;
          font-size: 50px;
        }

        .name {
          margin-top: 8px;
          font-size: 24px;
          font-weight: bold;
          color: rgba(0, 0, 0, 1);
        }
      }
    }
  }

  .btns {
    padding: 50px 0;

    .submit {
      width: 500px;
      margin: 0 auto;
      font-size: 36px;
      font-weight: bold;
      color: rgba(255, 255, 255, 1);
      background:rgba(252,214,1,1);
    }
  }

</style>
<template>
  <view class="page">

    <view class="menu-group">
      <view class="menu-item avatar-wrapper">
        <text class="name">头像</text>
        <view class="enter">
          <image class="avatar" src="{{avatarUrl}}" mode="aspectFill"/>
        </view>
      </view>
      <view class="menu-item">
        <text class="name">用户名</text>
        <text class="enter">
          <text class="value">{{formData.nickName}}</text>
          <text class="iconfont icon-enter"></text>
        </text>
      </view>
      <view class="menu-item" @tap="navTo('/pages/my/bindPhone')">
        <text class="name">绑定手机</text>
        <text class="enter">
          <text>{{phone}}</text>
          <text class="iconfont icon-enter"></text>
        </text>
      </view>
      <view class="menu-item" @tap="onAddressChange">
        <text class="name">我的地址</text>
        <text class="enter">
          <text>{{formData.address}}</text>
          <text class="iconfont icon-enter"></text>
        </text>
      </view>
      <view class="menu-item">
        <text class="name">大婚日</text>
        <picker bindchange="bindMarryTimeChange" mode="date" value="{{formData.marryTime}}" start="{{marryTimeStart}}">
          <view class="picker">
            {{formData.marryTime}}
          </view>
        </picker>
        <text class="enter">
          <text class="iconfont icon-enter"></text>
        </text>
      </view>
    </view>
    <view class="btns">
      <button class="submit" @tap="onSubmit">确定</button>
    </view>


    <!--分隔线-->
    <i-toast id="toast"/>
  </view>
</template>

<script>
  import schema from 'async-validator'
  import wepy from 'wepy'
  import format from 'date-fns/format'
  import page from '@/common/page'
  import loadMore from '../../components/loadMore'

  const { $Toast } = require('@/components/iview/base/index')

  export default class MySetting extends page {
    config = {
      'navigationBarTitleText': '设置',
      'enablePullDownRefresh': false,
      'navigationBarBackgroundColor': '#FFFFFF',
      'usingComponents': {
        'i-toast': '/components/iview/toast/index',
        'i-modal': '/components/iview/modal/index'
      }
    }
    components = {
      loadMore
    }

    data = {
      token: '',
      loading: false,
      hasNext: true,
      id: '',
      avatarUrl: '',
      phone: '',
      marryTimeStart: format(Date.now(), 'YYYY-MM-DD'),
      formData: {
        nickName: '',
        address: '',
        marryTime: ''
      },
      formValidator: {
        nickName: [
          { required: true, message: '请填写昵称', trigger: 'blur' }
        ]
      }

    }

    computed = {}

    onLoad (opt) {
      this.$getUser().then(res => {
        this.avatarUrl = res.avatarUrl
        this.phone = res.phone
        this.formData.nickName = res.nickName
        this.formData.address = res.address || ''
        if (res.marryTime) {
          this.formData.marryTime = format(res.marryTime, 'YYYY-MM-DD')
        }
        this.$apply()
      })
    }

    onShow () {
      this.init()
    }

    onReachBottom (e) {
      if (!this.hasNext || this.loading) {
        return
      }
    }

    onShareAppMessage (e) {
      let opt = {
        success (res) {
          console.log('分享成功', res)
        }
      }
      return opt
    }

    init () {
    }

    methods = {
      bindMarryTimeChange ({ detail }) {
        this.formData.marryTime = detail.value
      },
      onAddressChange () {
        wepy.chooseAddress().then(res => {
          /*let address = {
            countyName: res.countyName,
            provinceName: res.provinceName,
            cityName: res.cityName,
            telNumber: res.telNumber,
            detailInfo: res.detailInfo,
            postalCode: res.postalCode,
            nationalCode: res.nationalCode,
            userName: res.userName
          }*/

          let address = `${res.provinceName} ${res.cityName} ${res.detailInfo} ${res.userName} ${res.telNumber}`
          console.log(address)
          this.formData.address = address
          this.$apply()
        }).catch(err => {
          console.log(e)
          if (err.errMsg.indexOf('deny') > -1 || err.errMsg.indexOf('denied') > -1) {
            wx.openSetting()
          }
        })
      },
      onSubmit () {
        const validator = new schema(this.formValidator)
        validator.validate(this.formData, (errors, fields) => {
          if (errors) {
            $Toast({
              content: errors[0].message
            })
          } else {

            return this.$post('/user/update', this.formData).then(res => {
              if (res) {
                $Toast({
                  content: '修改成功'
                })

                wx.navigateBack({
                  delta: 2
                })
              }

            })

          }

        })
      },
    }

  }
</script>
