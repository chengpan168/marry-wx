<style lang="less">
  @import "../../assets/css/global";

  page {
  }

  .page {
  }

  .you-like {
    padding: 0 24px;
    margin-top: 10px;
    background: #ffffff;
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    flex-wrap: wrap;

    .item {
      text-align: center;
      margin-top: 20px;
      padding-bottom: 15px;

      image {
        width: 340px;
        height: 300px;
      }

      .name {
        margin-top: 20px;
        font-size: 28px;
        font-weight: bold;
        color: rgba(0, 0, 0, 1);
      }
    }
  }

</style>
<template>
  <view class="page">
    <view class="you-like">
      <view class="item" wx:for="{{list}}" wx:key="{{index}}">
        <image src="{{item.fileDto.url}}" mode="aspectFill"/>
        <view class="name">{{item.title}}</view>
      </view>
    </view>
    <!--分隔线-->
    <i-toast id="toast"/>
  </view>
</template>

<script>
  import page from '@/common/page'
  import format from 'date-fns/format'
  import loadMore from '../../components/loadMore'

  const { $Toast } = require('@/components/iview/base/index')

  export default class ShopLike extends page {
    config = {
      'navigationBarTitleText': '猜你喜欢 ',
      'enablePullDownRefresh': false,
      'navigationBarBackgroundColor': '#FFFFFF',
      'usingComponents': {
        'i-toast': '/components/iview/toast/index',
        'i-modal': '/components/iview/modal/index'
      }
    }
    components = {
      loadMore
    }

    data = {
      token: '',
      loading: false,
      hasNext: true,
      queryParam: {
        type: 'guessLike',
        current: 1,
        size: 10
      },
      list: []

    }

    computed = {}

    onLoad (opt) {
      this.id = opt.id
    }

    onShow () {
      this.init()
    }

    onReachBottom (e) {
      if (!this.data.hasNext || this.data.loading) {
        return
      }
    }

    onShareAppMessage (e) {
      let opt = {
        success (res) {
          console.log('分享成功', res)
        }
      }
      return opt
    }

    init () {
      this.queryParam.current = 1
      this.getList()
    }

    methods = {
      onNextPage () {
        if (!this.hasNext) {
          return
        }

        this.queryParam.current = this.queryParam.current + 1
        this.getList()
      }
    }

    getList () {
      if (this.loading) {
        return
      }

      wx.showNavigationBarLoading()
      this.loading = true
      this.$get('/plate/queryPageList', this.queryParam).then(res => {
        let list = res.records || []
        list.forEach(item => {
          item.createTimeText = format(item.createTime, 'YYYY-MM-DD')
        })
        this.list = list
        this.hasNext = res.current < res.pages

        this.loading = false
        wx.hideNavigationBarLoading()
        this.$apply()

      }).catch(err => {
        wx.hideNavigationBarLoading()
        this.loading = false
        this.$apply()
      })
    }

  }
</script>
